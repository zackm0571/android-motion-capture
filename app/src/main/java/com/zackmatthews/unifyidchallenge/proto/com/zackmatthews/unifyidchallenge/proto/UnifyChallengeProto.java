// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protolib/src/main/java/com/zackmathews/protolib/UnifyChallengeProto.proto

package com.zackmatthews.unifyidchallenge.proto;

public final class UnifyChallengeProto {
  private UnifyChallengeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:unifyidchallenge.SensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string sensorType = 1;</code>
     */
    boolean hasSensorType();
    /**
     * <code>required string sensorType = 1;</code>
     */
    java.lang.String getSensorType();
    /**
     * <code>required string sensorType = 1;</code>
     */
    com.google.protobuf.ByteString
        getSensorTypeBytes();

    /**
     * <code>repeated float sensorValues = 2;</code>
     */
    java.util.List<java.lang.Float> getSensorValuesList();
    /**
     * <code>repeated float sensorValues = 2;</code>
     */
    int getSensorValuesCount();
    /**
     * <code>repeated float sensorValues = 2;</code>
     */
    float getSensorValues(int index);

    /**
     * <code>required uint64 timestamp = 4;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required uint64 timestamp = 4;</code>
     */
    long getTimestamp();
  }
  /**
   * Protobuf type {@code unifyidchallenge.SensorData}
   */
  public  static final class SensorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:unifyidchallenge.SensorData)
      SensorDataOrBuilder {
    // Use SensorData.newBuilder() to construct.
    private SensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorData() {
      sensorType_ = "";
      sensorValues_ = java.util.Collections.emptyList();
      timestamp_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              sensorType_ = bs;
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sensorValues_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              sensorValues_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                sensorValues_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                sensorValues_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sensorValues_ = java.util.Collections.unmodifiableList(sensorValues_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.class, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder.class);
    }

    private int bitField0_;
    public static final int SENSORTYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object sensorType_;
    /**
     * <code>required string sensorType = 1;</code>
     */
    public boolean hasSensorType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string sensorType = 1;</code>
     */
    public java.lang.String getSensorType() {
      java.lang.Object ref = sensorType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sensorType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string sensorType = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSensorTypeBytes() {
      java.lang.Object ref = sensorType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSORVALUES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> sensorValues_;
    /**
     * <code>repeated float sensorValues = 2;</code>
     */
    public java.util.List<java.lang.Float>
        getSensorValuesList() {
      return sensorValues_;
    }
    /**
     * <code>repeated float sensorValues = 2;</code>
     */
    public int getSensorValuesCount() {
      return sensorValues_.size();
    }
    /**
     * <code>repeated float sensorValues = 2;</code>
     */
    public float getSensorValues(int index) {
      return sensorValues_.get(index);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private long timestamp_;
    /**
     * <code>required uint64 timestamp = 4;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 timestamp = 4;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorType_);
      }
      for (int i = 0; i < sensorValues_.size(); i++) {
        output.writeFloat(2, sensorValues_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(4, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorType_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSensorValuesList().size();
        size += dataSize;
        size += 1 * getSensorValuesList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData)) {
        return super.equals(obj);
      }
      com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData other = (com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData) obj;

      boolean result = true;
      result = result && (hasSensorType() == other.hasSensorType());
      if (hasSensorType()) {
        result = result && getSensorType()
            .equals(other.getSensorType());
      }
      result = result && getSensorValuesList()
          .equals(other.getSensorValuesList());
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSensorType()) {
        hash = (37 * hash) + SENSORTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSensorType().hashCode();
      }
      if (getSensorValuesCount() > 0) {
        hash = (37 * hash) + SENSORVALUES_FIELD_NUMBER;
        hash = (53 * hash) + getSensorValuesList().hashCode();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestamp());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code unifyidchallenge.SensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:unifyidchallenge.SensorData)
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.class, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder.class);
      }

      // Construct using com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sensorType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorData_descriptor;
      }

      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData getDefaultInstanceForType() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.getDefaultInstance();
      }

      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData build() {
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData buildPartial() {
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData result = new com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorType_ = sensorType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          sensorValues_ = java.util.Collections.unmodifiableList(sensorValues_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.sensorValues_ = sensorValues_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData) {
          return mergeFrom((com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData other) {
        if (other == com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.getDefaultInstance()) return this;
        if (other.hasSensorType()) {
          bitField0_ |= 0x00000001;
          sensorType_ = other.sensorType_;
          onChanged();
        }
        if (!other.sensorValues_.isEmpty()) {
          if (sensorValues_.isEmpty()) {
            sensorValues_ = other.sensorValues_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSensorValuesIsMutable();
            sensorValues_.addAll(other.sensorValues_);
          }
          onChanged();
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorType()) {
          return false;
        }
        if (!hasTimestamp()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object sensorType_ = "";
      /**
       * <code>required string sensorType = 1;</code>
       */
      public boolean hasSensorType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string sensorType = 1;</code>
       */
      public java.lang.String getSensorType() {
        java.lang.Object ref = sensorType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sensorType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string sensorType = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSensorTypeBytes() {
        java.lang.Object ref = sensorType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string sensorType = 1;</code>
       */
      public Builder setSensorType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sensorType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string sensorType = 1;</code>
       */
      public Builder clearSensorType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorType_ = getDefaultInstance().getSensorType();
        onChanged();
        return this;
      }
      /**
       * <code>required string sensorType = 1;</code>
       */
      public Builder setSensorTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sensorType_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> sensorValues_ = java.util.Collections.emptyList();
      private void ensureSensorValuesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sensorValues_ = new java.util.ArrayList<java.lang.Float>(sensorValues_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float sensorValues = 2;</code>
       */
      public java.util.List<java.lang.Float>
          getSensorValuesList() {
        return java.util.Collections.unmodifiableList(sensorValues_);
      }
      /**
       * <code>repeated float sensorValues = 2;</code>
       */
      public int getSensorValuesCount() {
        return sensorValues_.size();
      }
      /**
       * <code>repeated float sensorValues = 2;</code>
       */
      public float getSensorValues(int index) {
        return sensorValues_.get(index);
      }
      /**
       * <code>repeated float sensorValues = 2;</code>
       */
      public Builder setSensorValues(
          int index, float value) {
        ensureSensorValuesIsMutable();
        sensorValues_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float sensorValues = 2;</code>
       */
      public Builder addSensorValues(float value) {
        ensureSensorValuesIsMutable();
        sensorValues_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float sensorValues = 2;</code>
       */
      public Builder addAllSensorValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureSensorValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sensorValues_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float sensorValues = 2;</code>
       */
      public Builder clearSensorValues() {
        sensorValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>required uint64 timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 timestamp = 4;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required uint64 timestamp = 4;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 timestamp = 4;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:unifyidchallenge.SensorData)
    }

    // @@protoc_insertion_point(class_scope:unifyidchallenge.SensorData)
    private static final com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData();
    }

    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorData>
        PARSER = new com.google.protobuf.AbstractParser<SensorData>() {
      public SensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorData> getParserForType() {
      return PARSER;
    }

    public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorDataCollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:unifyidchallenge.SensorDataCollection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    java.util.List<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData> 
        getSensorDataList();
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData getSensorData(int index);
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    int getSensorDataCount();
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    java.util.List<? extends com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder> 
        getSensorDataOrBuilderList();
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder getSensorDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code unifyidchallenge.SensorDataCollection}
   */
  public  static final class SensorDataCollection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:unifyidchallenge.SensorDataCollection)
      SensorDataCollectionOrBuilder {
    // Use SensorDataCollection.newBuilder() to construct.
    private SensorDataCollection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorDataCollection() {
      sensorData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorDataCollection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                sensorData_ = new java.util.ArrayList<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData>();
                mutable_bitField0_ |= 0x00000001;
              }
              sensorData_.add(
                  input.readMessage(com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          sensorData_ = java.util.Collections.unmodifiableList(sensorData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorDataCollection_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorDataCollection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection.class, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection.Builder.class);
    }

    public static final int SENSORDATA_FIELD_NUMBER = 3;
    private java.util.List<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData> sensorData_;
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    public java.util.List<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData> getSensorDataList() {
      return sensorData_;
    }
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    public java.util.List<? extends com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder> 
        getSensorDataOrBuilderList() {
      return sensorData_;
    }
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    public int getSensorDataCount() {
      return sensorData_.size();
    }
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData getSensorData(int index) {
      return sensorData_.get(index);
    }
    /**
     * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
     */
    public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder getSensorDataOrBuilder(
        int index) {
      return sensorData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSensorDataCount(); i++) {
        if (!getSensorData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < sensorData_.size(); i++) {
        output.writeMessage(3, sensorData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < sensorData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sensorData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection)) {
        return super.equals(obj);
      }
      com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection other = (com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection) obj;

      boolean result = true;
      result = result && getSensorDataList()
          .equals(other.getSensorDataList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getSensorDataCount() > 0) {
        hash = (37 * hash) + SENSORDATA_FIELD_NUMBER;
        hash = (53 * hash) + getSensorDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code unifyidchallenge.SensorDataCollection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:unifyidchallenge.SensorDataCollection)
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorDataCollection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorDataCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection.class, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection.Builder.class);
      }

      // Construct using com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSensorDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (sensorDataBuilder_ == null) {
          sensorData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sensorDataBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.internal_static_unifyidchallenge_SensorDataCollection_descriptor;
      }

      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection getDefaultInstanceForType() {
        return com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection.getDefaultInstance();
      }

      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection build() {
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection buildPartial() {
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection result = new com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection(this);
        int from_bitField0_ = bitField0_;
        if (sensorDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            sensorData_ = java.util.Collections.unmodifiableList(sensorData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sensorData_ = sensorData_;
        } else {
          result.sensorData_ = sensorDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection) {
          return mergeFrom((com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection other) {
        if (other == com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection.getDefaultInstance()) return this;
        if (sensorDataBuilder_ == null) {
          if (!other.sensorData_.isEmpty()) {
            if (sensorData_.isEmpty()) {
              sensorData_ = other.sensorData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSensorDataIsMutable();
              sensorData_.addAll(other.sensorData_);
            }
            onChanged();
          }
        } else {
          if (!other.sensorData_.isEmpty()) {
            if (sensorDataBuilder_.isEmpty()) {
              sensorDataBuilder_.dispose();
              sensorDataBuilder_ = null;
              sensorData_ = other.sensorData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sensorDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSensorDataFieldBuilder() : null;
            } else {
              sensorDataBuilder_.addAllMessages(other.sensorData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSensorDataCount(); i++) {
          if (!getSensorData(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData> sensorData_ =
        java.util.Collections.emptyList();
      private void ensureSensorDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sensorData_ = new java.util.ArrayList<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData>(sensorData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder> sensorDataBuilder_;

      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public java.util.List<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData> getSensorDataList() {
        if (sensorDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensorData_);
        } else {
          return sensorDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public int getSensorDataCount() {
        if (sensorDataBuilder_ == null) {
          return sensorData_.size();
        } else {
          return sensorDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData getSensorData(int index) {
        if (sensorDataBuilder_ == null) {
          return sensorData_.get(index);
        } else {
          return sensorDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder setSensorData(
          int index, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData value) {
        if (sensorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorDataIsMutable();
          sensorData_.set(index, value);
          onChanged();
        } else {
          sensorDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder setSensorData(
          int index, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder builderForValue) {
        if (sensorDataBuilder_ == null) {
          ensureSensorDataIsMutable();
          sensorData_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder addSensorData(com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData value) {
        if (sensorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorDataIsMutable();
          sensorData_.add(value);
          onChanged();
        } else {
          sensorDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder addSensorData(
          int index, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData value) {
        if (sensorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorDataIsMutable();
          sensorData_.add(index, value);
          onChanged();
        } else {
          sensorDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder addSensorData(
          com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder builderForValue) {
        if (sensorDataBuilder_ == null) {
          ensureSensorDataIsMutable();
          sensorData_.add(builderForValue.build());
          onChanged();
        } else {
          sensorDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder addSensorData(
          int index, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder builderForValue) {
        if (sensorDataBuilder_ == null) {
          ensureSensorDataIsMutable();
          sensorData_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder addAllSensorData(
          java.lang.Iterable<? extends com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData> values) {
        if (sensorDataBuilder_ == null) {
          ensureSensorDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sensorData_);
          onChanged();
        } else {
          sensorDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder clearSensorData() {
        if (sensorDataBuilder_ == null) {
          sensorData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sensorDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public Builder removeSensorData(int index) {
        if (sensorDataBuilder_ == null) {
          ensureSensorDataIsMutable();
          sensorData_.remove(index);
          onChanged();
        } else {
          sensorDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder getSensorDataBuilder(
          int index) {
        return getSensorDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder getSensorDataOrBuilder(
          int index) {
        if (sensorDataBuilder_ == null) {
          return sensorData_.get(index);  } else {
          return sensorDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public java.util.List<? extends com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder> 
           getSensorDataOrBuilderList() {
        if (sensorDataBuilder_ != null) {
          return sensorDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensorData_);
        }
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder addSensorDataBuilder() {
        return getSensorDataFieldBuilder().addBuilder(
            com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder addSensorDataBuilder(
          int index) {
        return getSensorDataFieldBuilder().addBuilder(
            index, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .unifyidchallenge.SensorData sensorData = 3;</code>
       */
      public java.util.List<com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder> 
           getSensorDataBuilderList() {
        return getSensorDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder> 
          getSensorDataFieldBuilder() {
        if (sensorDataBuilder_ == null) {
          sensorDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorData.Builder, com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataOrBuilder>(
                  sensorData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          sensorData_ = null;
        }
        return sensorDataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:unifyidchallenge.SensorDataCollection)
    }

    // @@protoc_insertion_point(class_scope:unifyidchallenge.SensorDataCollection)
    private static final com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection();
    }

    public static com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorDataCollection>
        PARSER = new com.google.protobuf.AbstractParser<SensorDataCollection>() {
      public SensorDataCollection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorDataCollection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorDataCollection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorDataCollection> getParserForType() {
      return PARSER;
    }

    public com.zackmatthews.unifyidchallenge.proto.UnifyChallengeProto.SensorDataCollection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_unifyidchallenge_SensorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_unifyidchallenge_SensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_unifyidchallenge_SensorDataCollection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_unifyidchallenge_SensorDataCollection_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nIprotolib/src/main/java/com/zackmathews" +
      "/protolib/UnifyChallengeProto.proto\022\020uni" +
      "fyidchallenge\"I\n\nSensorData\022\022\n\nsensorTyp" +
      "e\030\001 \002(\t\022\024\n\014sensorValues\030\002 \003(\002\022\021\n\ttimesta" +
      "mp\030\004 \002(\004\"H\n\024SensorDataCollection\0220\n\nsens" +
      "orData\030\003 \003(\0132\034.unifyidchallenge.SensorDa" +
      "taB>\n\'com.zackmatthews.unifyidchallenge." +
      "protoB\023UnifyChallengeProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_unifyidchallenge_SensorData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_unifyidchallenge_SensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_unifyidchallenge_SensorData_descriptor,
        new java.lang.String[] { "SensorType", "SensorValues", "Timestamp", });
    internal_static_unifyidchallenge_SensorDataCollection_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_unifyidchallenge_SensorDataCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_unifyidchallenge_SensorDataCollection_descriptor,
        new java.lang.String[] { "SensorData", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
